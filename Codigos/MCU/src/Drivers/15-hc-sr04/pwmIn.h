/*******************************************************************************************************************************//**
 *
 * @file		pwmIn.h
 * @brief		Pata que lee tamaños de pulsos de entrada
 * @date		22 jun. 2022
 * @author		Técnico. Martinez Agustin
 *
 **********************************************************************************************************************************/

/***************************************
 *	PWM_IN
 *
 *	Lee ancho de señal de una entrada en milisegundos.
 *
 *	Solo lee pulsos completos. Si se queda en 0, no lo leerá hasta volver a 1.
 *  Lectura:
 *  __________________				 _____________________________
 *  |    			 |				 |
 *  |    			 |				 |
 *  |  	    	 	 |_______________|
 *
 *  |----m_pulse_on---|				 |----m_pulse_on---------------
***************************************/

/***********************************************************************************************************************************
 *** MODULO
 **********************************************************************************************************************************/
#ifndef PWM_INPUT_PWMIN_H_
#define PWM_INPUT_PWMIN_H_
/***********************************************************************************************************************************
 *** INCLUDES GLOBALES
 **********************************************************************************************************************************/
#include "Pininterrupt.h"
#include "MRThandler.h"
#include "MRT_config.h"
/***********************************************************************************************************************************
 *** DEFINES GLOBALES
 **********************************************************************************************************************************/

/***********************************************************************************************************************************
 *** MACROS GLOBALES
 **********************************************************************************************************************************/

/***********************************************************************************************************************************
 *** TIPO DE DATOS GLOBALES
 **********************************************************************************************************************************/

/***********************************************************************************************************************************
 *** VARIABLES GLOBALES
 **********************************************************************************************************************************/

/***********************************************************************************************************************************
 *** IMPLANTACION DE LA CLASE
 **********************************************************************************************************************************/
class pwmIn : protected Pin_interrupt , protected MRThandler
{
	private:
		uint32_t m_pulse_on;	/*Buffer tiempo on*/

	public:
		pwmIn( uint8_t puerto , uint8_t bit , uint8_t modo , uint8_t activity , MRT_timer_channels timer_channel );
		void Inicializar( void );
		uint32_t GetPulseOn( void ) const;
		void Off(void);
		void On(void);
		virtual ~pwmIn(){};
	protected:
		void GpioHandler(void);
};

#endif /* PWM_INPUT_PWMIN_H_ */
