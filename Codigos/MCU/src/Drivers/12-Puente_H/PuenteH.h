/*******************************************************************************************************************************//**
 *
 * @file		PuenteH.h
 * @brief		Clase base para objetos del tipo Puente H
 * @date		25 sep. 2022
 * @author		TÃ©cnico. Martinez Agustin
 *
 **********************************************************************************************************************************/

#ifndef PUENTE_H_PUENTEH_H_
#define PUENTE_H_PUENTEH_H_

/***********************************************************************************************************************************
 *** INCLUDES GLOBALES
 **********************************************************************************************************************************/
#include "tipos.h"
/***********************************************************************************************************************************
 *** DEFINES GLOBALES
 **********************************************************************************************************************************/

/***********************************************************************************************************************************
 *** MACROS GLOBALES
 **********************************************************************************************************************************/
/***********************************************************************************************************************************
 *** TIPO DE DATOS GLOBALES
 **********************************************************************************************************************************/

/***********************************************************************************************************************************
 *** IMPLANTACION DE LA CLASE
 **********************************************************************************************************************************/
class Puente_H
{
	public:
		enum { IZQUIERDA = 0 , DERECHA};
	public:
		Puente_H( ) { };
		virtual void Inicializar(void) = 0;
		virtual void GirarIzq(void) = 0;
		virtual void GirarDer(void) = 0;
		virtual void Girar ( uint8_t direccion ) = 0;
		virtual void Frenar ( void ) = 0;
		virtual void Avanzar( void ) = 0;
		virtual void Retroceder( void ) = 0;
		virtual ~Puente_H() { };
};

#endif /* PUENTE_H_PUENTEH_H_ */
